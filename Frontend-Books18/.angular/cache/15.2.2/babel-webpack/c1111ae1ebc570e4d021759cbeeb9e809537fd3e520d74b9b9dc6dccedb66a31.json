{"ast":null,"code":"var _a;\nimport { __decorate, __metadata } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ConfirmationService, MessageService } from 'primeng/api';\nimport { BookService } from '../../services/book.service';\nlet AddBooksComponent = class AddBooksComponent {\n  constructor(router, bookService, messageService, confirmationService, cdRef) {\n    this.router = router;\n    this.bookService = bookService;\n    this.messageService = messageService;\n    this.confirmationService = confirmationService;\n    this.cdRef = cdRef;\n    this.bookDialog = false;\n    this.selectedBooks = [];\n    this.submitted = false;\n    this.book = [];\n    this.orderBy = '';\n    this.selectedOrder = '';\n    this.options = [{\n      label: 'Selecione a ordenação',\n      value: ''\n    }, {\n      label: 'Título Ascendente',\n      value: 'title_asc'\n    }, {\n      label: 'Autor Ascendente',\n      value: 'author_asc'\n    }, {\n      label: 'Título Descendente',\n      value: 'title_desc'\n    }, {\n      label: 'Edição Descendente',\n      value: 'edition_desc'\n    }, {\n      label: 'Autor Descendente',\n      value: 'author_desc'\n    }, {\n      label: 'Edição Ascendente',\n      value: 'edition_asc'\n    }];\n    this.addBookRequest = {\n      id: '',\n      Titulo: '',\n      Autor: '',\n      Edicao: 0\n    };\n  }\n  ngOnInit() {\n    this.fetchBooks();\n  }\n  addBook() {\n    this.bookService.addBook(this.addBookRequest).subscribe({\n      next: () => {\n        this.messageService.add({\n          severity: 'success',\n          summary: 'Sucesso',\n          detail: 'Livro adicionado com sucesso.'\n        });\n        this.router.navigate(['pessoa']);\n      },\n      error: response => {\n        this.messageService.add({\n          severity: 'error',\n          summary: 'Erro',\n          detail: 'Erro ao adicionar livro.'\n        });\n        console.error(response);\n      }\n    });\n  }\n  openNew() {\n    this.book = [];\n    this.submitted = false;\n    this.bookDialog = true;\n  }\n  editBook(book) {\n    this.books = Object.assign({}, book);\n    this.bookDialog = true;\n  }\n  confirm() {\n    this.confirmationService.confirm({\n      message: 'Tem certeza de que deseja executar esta ação?',\n      accept: () => {\n        // Implementar a ação a ser executada após a confirmação\n      }\n    });\n  }\n  hideDialog() {\n    this.bookDialog = false;\n    this.submitted = false;\n  }\n  fetchBooks() {\n    this.bookService.getBooksOrderBy(this.orderBy).subscribe(data => {\n      this.book = data;\n    }, error => {\n      this.messageService.add({\n        severity: 'error',\n        summary: 'Erro',\n        detail: 'Erro ao recuperar a lista de livros.'\n      });\n      console.error('Erro ao recuperar a lista de livros', error);\n    });\n  }\n  onOrderByChange(orderBy) {\n    const orderMap = {\n      'title_asc': (a, b) => (a.Titulo || '').localeCompare(b.Titulo || ''),\n      'author_asc': (a, b) => (a.Autor || '').localeCompare(b.Autor || ''),\n      'title_desc': (a, b) => (b.Titulo || '').localeCompare(a.Titulo || ''),\n      'author_desc': (a, b) => (b.Autor || '').localeCompare(a.Autor || ''),\n      'edition_desc': (a, b) => b.Edicao - a.Edicao,\n      'edition_asc': (a, b) => a.Edicao - b.Edicao,\n      'title_asc_edition_asc': (a, b) => {\n        const titleComparison = (a.Titulo || '').localeCompare(b.Titulo || '');\n        if (titleComparison !== 0) return titleComparison;\n        return a.Edicao - b.Edicao;\n      }\n    };\n    if (orderMap[orderBy]) {\n      this.book.sort(orderMap[orderBy]);\n      this.cdRef.detectChanges();\n    }\n  }\n};\nAddBooksComponent = __decorate([Component({\n  selector: 'app-add-books',\n  templateUrl: './add-books.component.html',\n  styleUrls: ['./add-books.component.scss']\n}), __metadata(\"design:paramtypes\", [Router, BookService, MessageService, ConfirmationService, typeof (_a = typeof ChangeDetectorRef !== \"undefined\" && ChangeDetectorRef) === \"function\" ? _a : Object])], AddBooksComponent);\nexport { AddBooksComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}